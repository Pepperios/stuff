import os
from tkinter import *
from tkinter import filedialog, colorchooser, font
from tkinter.messagebox import *
from tkinter.filedialog import *

def change_color():
    color = colorchooser.askcolor(title = "Color Picker")
    text_area.config(fg = color[1]) # gets hex value of color
def change_font(*args):
    text_area.config(font =(font_name.get(), size_box.get())) 
def new_file():
    window.title("Untitled")
    text_area.delete(1.0, end) # deletes first char to end, has to be float
def open_file(): # fix
    file = askopenfilename(defaultextension = ".txt", file =[("All files", "*.*"), ("Text Documents", "*.txt")]) # *.* = all files

    try:
        window.title(os.path.basename(file)) # title is the name
        text_area.delete(1.0, END)
        
        theFile = open(file, "r") # reads file
        
        text_area.insert(.0, theFile.read()) # displays text within file
        
    except Exception:
        print("Doesn't wok")
        
    finally:
        theFile.close() # doesnt close
        
def save_file():
    file = filedialog.asksaveasfilename(initialfile = "untitled.txt",
                                        defaultextension = ".txt",
                                        filetypes = [("All files", "*.*"), 
                                                     ("Txt Files", "*.txt")])

    if file is None:
        return 
    
    else:
        try:
            window.title(os.path.basename(file))
            file = open(file, "w")
            
            file.write(text_area.get(1.0, END))
            
        except Exception:
            print("didn't wok")
            
        finally:
            file.close()      
def cut():
    text_area.event_generate("<<Cut>>")
def copy():
    text_area.event_generate("<<Copy>>")
def paste():
    text_area.event_generate("<<Paste>>")
def about(): # messagebox
    showinfo("About this program", "This is a program written by PeppeR") # first arg title, second arg text
def quit():
    window.destroy() # exits
    
window = Tk()
window.title("Text Editor Program")
file = None

window_width = 500
window_height = 500
screen_width = window.winfo_screenwidth() # gets screenwidth
screen_height = window.winfo_screenheight()

x = int((screen_width / 2) - (window_width / 2)) # why?
y = int((screen_height / 2) - (window_height / 2))

window.geometry("{}x{}+{}+{}".format(window_width, window_height, x, y)) # string format method, variables go into {} by order
# centers the screen ^^^

font_name = StringVar(window) # adds to the window
font_name.set("Arial") # sets a default 

font_size = StringVar(window) 
font_size.set(25)

text_area = Text(window, font=(font_name.get(), font_size.get())) # gets variable within font_name

scroll_bar = Scrollbar(text_area)
window.grid_rowconfigure(0, weight = 1) # how big the row will be in comparison to other rows, 1 is default
window.grid_columnconfigure(0, weight = 1)
text_area.grid(sticky = N + E + S + W) # what the fuck, sticks to the four corners of the window
scroll_bar.pack(side = RIGHT, fill = Y) # fills vertically whatever that means
text_area.config(yscrollcommand = scroll_bar.set) # he's not even explaining it

frame = Frame(window)
frame.grid()

color_button = Button(frame, text = "color", command = change_color)
color_button.grid(row = 0, column = 0)

font_box = OptionMenu(frame, font_name, *font.families(), command = change_font)# font_name is a stringvar, *font.families() shows all fonts
font_box.grid(row = 0, column = 1) # option menu lists many options..

size_box = Spinbox(frame, from_ = 1, to = 100, textvariable = font_size, command = change_font) # allows to change font size
size_box.grid(row = 0, column = 2)

menu_bar = Menu(window)
window.config(menu = menu_bar) # adds menu bar

file_menu = Menu(menu_bar, tearoff = 0) 

menu_bar.add_cascade(label = "File", menu = file_menu)

file_menu.add_command(label = "New", command = new_file)
file_menu.add_command(label = "Open", command = open_file)
file_menu.add_command(label = "Save", command = save_file)
file_menu.add_separator()
file_menu.add_command(label = "Exit", command = quit)

edit_menu = Menu(menu_bar, tearoff = 0)
menu_bar.add_cascade(label = "Edit", menu = edit_menu)

edit_menu.add_command(label = "Cut", command = cut)
edit_menu.add_command(label = "Copy", command = copy)
edit_menu.add_command(label = "Paste", command = paste)

help_menu = Menu(menu_bar, tearoff = 0)
menu_bar.add_cascade(label = "Help", menu = help_menu)
help_menu.add_command(label = "About", command = about)

window.mainloop()
